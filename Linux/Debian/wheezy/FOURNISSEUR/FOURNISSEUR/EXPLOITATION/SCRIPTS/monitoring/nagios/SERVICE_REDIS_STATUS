#!/usr/bin/env bash

# on défini un PATH orthodoxe par sécurité
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# on desactive les alias par sécurité
\unalias -a

# on glob pour le case
shopt -s extglob

_NAGIOS_STATUS_OK=0
_NAGIOS_STATUS_WARNING=1
_NAGIOS_STATUS_CRITICAL=2
_NAGIOS_STATUS_UNKNOWN=3

CONF_FILE=/etc/redis/redis.conf
NAME="redis"
LOG_NAME="/tmp/$(basename $0).log"

if [ -f $LOG_NAME ] ; then
	> $LOG_NAME
fi

## on verifie que les dependances sont presentes ##
for MYPROG in redis-cli awk grep wc ; do
        if ! type -ap $MYPROG &> /dev/null ; then
                echo "WARNING : impossible de trouver $MYPROG" ;
                exit $_NAGIOS_STATUS_UNKNOWN

        fi
done

HELP_STRING="Utilisation : ce script s'utilise avec ou sans arguments.\n
 . Exemple d'utilisation : ./SERVICE_${NAME^^}_STATUS "adresse" ET "port" OU ./SERVICE_${NAME^^}_STATUS\n
 . Information : l'adresse IP et le port specifiés sur la ligne de commande sont pris en compte prioritairement à l'évaluation du fichier de configuration.\n
\tSi aucun arguments n'est spécifié, l'adresse IP et le port définis dans le fichier $CONF_FILE sont évalués.\n
\tSi aucune valeurs n'est trouvés dans le fichier de configuration, l'adresse et le port sont définis au valeurs suivantes : 127.0.0.1/6379"

case $* in 
+([[:digit:]]).+([[:digit:]]).+([[:digit:]]).+([[:digit:]])+([[:space:]])+([[:digit:]]))
	INTERFACE_NAME=$1
	PORT_NUMBER=$2
;;
-h|--help)
	echo -e $HELP_STRING
	exit $_NAGIOS_STATUS_UNKNOWN
;;
*)
	## on test la presence du fichier de conf ##
	if ! [ -f $CONF_FILE ] ; then
		echo "WARNING : impossible de trouver le fichier de conf $CONF_FILE, merci d'intervenir" ;
		exit $_NAGIOS_STATUS_UNKNOWN
	else
		## on defini des variables ##
		PORT_NUMBER_VALUE=$(awk '/^-p/ {print$NF}' $CONF_FILE)
		PORT_NUMBER=${PORT_NUMBER_VALUE:-6379}
		INTERFACE_NAME_VALUE=$(awk '/^-l/ {print$NF}' $CONF_FILE)
		INTERFACE_NAME=${INTERFACE_NAME_VALUE:-127.0.0.1}
	fi
;;
esac	

KEY_NAME=FOURNISSEUR-key
KEY_VALUE=$(echo "FOURNISSEUR-value-"$RANDOM)
VALUE_LENGHT=$((($(echo $KEY_VALUE | wc -c)-1)))

## on verifie que le processus est actif ##
if ! redis-cli ping | grep -q PONG && redis-cli info | grep -q uptime ; then
        echo "CRITICAL : processus $NAME non actif, merci d'intervenir"
        exit $_NAGIOS_STATUS_CRITICAL
fi

## on insere une paire clef/valeur ##
if ! redis-cli -h $INTERFACE_NAME -p $PORT_NUMBER SET $KEY_NAME $KEY_VALUE 2> $LOG_NAME | grep -q OK ; then
        echo "CRITICAL : impossible d'inserer la clef $KEY_NAME - merci de consulter $LOG_NAME"
        exit $_NAGIOS_STATUS_CRITICAL
## on interroge la paire clef/valeur ##
elif ! redis-cli -h $INTERFACE_NAME -p $PORT_NUMBER GET $KEY_NAME 2> $LOG_NAME | grep -q $KEY_VALUE ; then
        echo "CRITICAL : impossible de recuperer la valeur de la clef $KEY_VALUE - merci de consulter $LOG_NAME"
        exit $_NAGIOS_STATUS_CRITICAL
## on supprime la paire clef/valeur ##
elif ! redis-cli -h $INTERFACE_NAME -p $PORT_NUMBER DEL $KEY_NAME 2> $LOG_NAME | grep -q 1 ; then
        echo "CRITICAL : impossible de supprimer la clef $KEY_NAME - merci de consulter $LOG_NAME"
        exit $_NAGIOS_STATUS_CRITICAL
else
        echo "OK : service $NAME fonctionnel - ecriture, lecture et suppression de la clef $KEY_NAME reussies" ;
        exit $_NAGIOS_STATUS_OK
fi

## Catch If Not Match ##
echo "WARNING : Une condition anormale a ete rencontree, merci d'investiguer" ;
exit $_NAGIOS_STATUS_UNKNOWN
