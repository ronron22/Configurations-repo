#!/usr/bin/env bash

# on glob pour le case (ou pas)
# shopt -s extglob

# on defini un PATH sur
PATH=/usr/sbin:/usr/bin:/sbin:/bin

# on degage d'eventuels alias
\unalias -a

# Repertoire d'accueil des backups 
BACKUP_DIR=/appli/oracle/admin/prod/dpdump/
# Fichier accueillant les logs du dump
ORA_DUMP_LIST_FILE=${BACKUP_DIR}export.log

SCRIPT_NAME=$(basename $0)
LOCK_FILE=/var/run/$SCRIPT_NAME.pid
LOG_FILE=/tmp/$SCRIPT_NAME.log

_NAGIOS_STATUS_OK=0
_NAGIOS_STATUS_WARNING=1
_NAGIOS_STATUS_CRITICAL=2
_NAGIOS_STATUS_UNKNOWN=3

for MYPROG in tail grep rm pgrep id stat tee ; do
        if ! type -ap $MYPROG &> /dev/null ; then
                echo "WARNING : impossible de trouver $MYPROG, une dependance requise manque !!!" ;
                exit $_NAGIOS_STATUS_UNKNOWN

        fi
done

# on fait le menache en sortant, chi, chi
trap "rm -f $LOCK_FILE" EXIT QUIT TERM

# on sort en UNKNOWN de suite sur signale spécifique 
trap "echo \" - merci de consulter le journal des erreurs $LOG_FILE\" | tee -a $LOG_FILE ; exit $_NAGIOS_STATUS_UNKNOWN" SIGUSR1
#trap "echo $OUT ; exit $RCODE" SIGUSR1

# on sort en CRITICAL de suite sur signale spécifique 
trap "echo \" - merci de consulter le journal des erreurs $LOG_FILE\" | tee -a $LOG_FILE ; exit $_NAGIOS_STATUS_CRITICAL" SIGUSR2

## on verifie l'identite de l'executant ##
if (($(id -u)>0)) ; then 
		echo "UNKNOWN : ce script devrait s'executer sous l'utilisateur root" ;
		exit $_NAGIOS_STATUS_UNKNOWN ;
fi

## on verifie que c'est bien bash 3 au moins ##
if (($BASH_VERSINFO<3)) ; then 
	echo "UNKNOWN : ce script necessite au moins Bash 3" ;
	exit $_NAGIOS_STATUS_UNKNOWN ;
fi	

# on autorise qu'une instance du script
if [ -f $LOCK_FILE ] ; then
	echo "UNKNOWN : une instance est deja active" ;
	exit $_NAGIOS_STATUS_UNKNOWN ;
else
	echo "$$" > $LOCK_FILE ;
fi

HELP_STRING="Ce script vérifie que le dump Oracle se fait correctement en cherchant la chaine \"successfully completed\"\n
   dans le fichier export.log, il vérifie aussi que ce fichier n'est pas trop ancien.\n
  - Utilisation : ce script s'utilise sans arguments.\n"

## on initialise le code retour a 3 on evite ainsi les scripts OUI-OUI
RCODE=3

# initialisation du log 
if [ -f $LOG_FILE ] ; then
	> $LOG_FILE
else
	if ! > $LOG_FILE ; then
		echo "UNKNOWN : impossible de creer le fichier de log" ;
		exit $_NAGIOS_STATUS_UNKNOWN ;
	fi
fi

### Corp ###

test_variable_empty() {
	if [ -z $1 ] ; then
		echo "UNKNOWN : le paramètre positionnel de la fonction est vide" | tee -a $LOG_FILE ;	
		kill -10 $$
	fi
}

read_last_modification() {
	# on recupere la date de modification du fichier
	# on test le parametre positionnel
	test_variable_empty "$1"
	FILE_NAME="$1"
	if ! [ -f $FILE_NAME ] ; then
		echo -n "CRITICAL : le fichier $FILE_NAME n'existe pas" | tee -a $LOG_FILE ;
		kill -12 $$
	elif ! [ -s $FILE_NAME ] ; then
		echo -n "CRITICAL : le fichier $FILE_NAME est vide" | tee -a $LOG_FILE ;
		kill -12 $$
	else
		DATE_VALUE=$(stat -c  "%Y" $FILE_NAME 2>> $LOG_FILE)
	fi

}

check_last_modification() {
	DATE_VALUE="$1"
	NOW=$(date +%s)
	NOW48h=$((($NOW-172800)))
	if (($DATE_VALUE<$NOW48h)) ; then
        	echo -n "CRITICAL : le fichier $ORA_DUMP_LIST_FILE n'a pas été mis à jours depuis plus de 48 heures" | tee -a $LOG_FILE ;
		kill -12 $$
	else 
		RCODE=0 ;
		export OUT="date de modification $(date -d @$DATE_VALUE +%d/%m/%y-%Hh%M) < 48h - " 
	fi
}

check_ora_export_file_status() {
	if ! tail -n 1 $ORA_DUMP_LIST_FILE | grep -q "successfully completed" ; then
        	echo -n "CRITICAL : la chaine \"successfully completed\" n'a pas été trouvée" | tee -a $LOG_FILE ;
		kill -12 $$
	else 
		RCODE=0 ;
		export OUT="$OUT la chaine \"successfully completed\" a été trouvée" ;
	fi
}	
	
errors_engine() {
	#################################
	# moteur de traitement d'erreur #
	#################################
	if (($RCODE==2)) ; then
		echo -e "$OUT" | tee -a $LOG_FILE
		exit $_NAGIOS_STATUS_CRITICAL ;
	elif (($RCODE==3)) ; then
		echo -e "$OUT" | tee -a $LOG_FILE
		exit $_NAGIOS_STATUS_UNKNOWN ;
	elif (($RCODE==0)) ; then
		echo -e "OK : $OUT" | tee -a $LOG_FILE
		exit $_NAGIOS_STATUS_OK ;
	else
		# catch if no match     
		echo "UNKNOWN : une erreur a eu lieu durant le traitement, merci d'intervenir" ;
		exit $_NAGIOS_STATUS_UNKNOWN ;
	fi
}

case $* in
	-h|--help)
		echo -e $HELP_STRING
		exit $_NAGIOS_STATUS_UNKNOWN
	;;
	*)
		read_last_modification $ORA_DUMP_LIST_FILE
		check_last_modification $DATE_VALUE
		check_ora_export_file_status 
			
		errors_engine
	;;
esac
