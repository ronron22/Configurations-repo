#!/usr/bin/env bash

PATH=/usr/sbin:/usr/bin:/sbin:/bin

# on desactive les alias
\unalias -a

_NAGIOS_STATUS_OK=0
_NAGIOS_STATUS_WARNING=1
_NAGIOS_STATUS_CRITICAL=2
_NAGIOS_STATUS_UNKNOWN=3

BACKUP_LOG=/tmp/backup-client.log

for MYPROG in find ; do
	if ! type -ap $MYPROG 1> /dev/null ; then
		echo "UNKNOWN : impossible de trouver $MYPROG" ;
		exit $_NAGIOS_STATUS_UNKNOWN ;
	fi
done

if [ -f $BACKUP_LOG ] ; then
	LASTMODIFY=$(stat -c %Y $BACKUP_LOG)
	if (($LASTMODIFY < ($(date +%s)-93600))) ; then
		OUT="CRITICAL : un probleme de synchronisation est survenu, la dernière synchronisation date de plus d'un jour" ;
		RCODE=2 ;
	else
		grep -q BACKUP_ERROR $BACKUP_LOG
		if [ $? -eq 1 ] ; then
			OUT="OK" ;
			RCODE=0 ;
		else  
			OUT="CRITICAL : un probleme de synchronisation est survenu, merci de regarder le contenu de $BACKUP_LOG" ;
			RCODE=2 ;
		fi
	fi
else
	OUT="CRITICAL : un probleme de synchronisation est survenu, le fichier de log $BACKUP_LOG n'existe pas" ;
	RCODE=2 ;
fi

#####################################
#   moteur de traitement d'erreur   #
#####################################

if (($RCODE==2)) ; then
	echo $OUT ;
	exit $_NAGIOS_STATUS_CRITICAL ;
elif (($RCODE==0)) ; then
	echo -e "$OUT\n+synchro rsync avec le serveur du client sans erreur" ;
	exit $_NAGIOS_STATUS_OK ;
else
	# catch if no match     
	echo "UNKNOWN : une erreur a eu lieu durant le traitement, merci d'intervenir" ;
	exit $_NAGIOS_STATUS_UNKNOWN ;
fi
