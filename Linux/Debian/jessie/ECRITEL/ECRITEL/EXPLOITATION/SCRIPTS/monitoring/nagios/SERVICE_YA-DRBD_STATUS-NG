#!/usr/bin/env bash

# YA = Yet Another ...

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
\unalias -a

_tr=/usr/bin/tr

_NAGIOS_STATUS_OK=0
_NAGIOS_STATUS_WARNING=1
_NAGIOS_STATUS_CRITICAL=2
_NAGIOS_STATUS_UNKNOWN=3

DEFAULT_DRBDDIR=/opt/drbd

for MYPROG in drbd-overview ; do
        if ! type -ap $MYPROG 1> /dev/null ; then
                echo "WARNING : impossible de trouver $MYPROG" ;
                exit $_NAGIOS_STATUS_WARNING
        fi
done

DRBD_OUT=$(drbd-overview)

for data in $DRBD_OUT ; do
	DRBD_VALUE+=("$data")
done

CS=${DRBD_VALUE[1]}
RO=${DRBD_VALUE[2]}
DS=${DRBD_VALUE[3]}
MOUNT_DIR=${DRBD_VALUE[6]}


function help() {
	echo "$0 -r Primary|Secondary [-m MountDirectory]"
	echo MountDirectory = /opt/drbd or an other directory.
}

function check_connection_function() {
	case $1 in
		Connected)
			CS_VALUE=0
		;;  
		Disconnected)
			echo "Critical : node is in Disconnected state"
			exit $_NAGIOS_STATUS_CRITICAL
		;;  
		# tentative de connexion sur peer down
		WFConnection)
			echo "Critical : peer appear to be unreachable"
			exit $_NAGIOS_STATUS_CRITICAL
		;;  
	esac
} 

function check_role_function() {
	case $1 in
		Primary/Secondary)
			if [ $ROLE == "M" ] ; then
				RO_VALUE=0
			fi
			if [ $ROLE == "S" ] ; then
				echo "Critical : node is Primary, default role is Secondary"
				exit $_NAGIOS_STATUS_CRITICAL
			fi
		;;  
		Secondary/Primary)
			if [ $ROLE == "S" ] ; then
				RO_VALUE=0
			fi
			if [ $ROLE == "M" ] ; then
				echo "Critical : node is secondary, default role is Primary"
				exit $_NAGIOS_STATUS_CRITICAL
			fi
		;;  
		Secondary/Secondary)
			echo "Critical : node peer is in Unknown state"
			exit $_NAGIOS_STATUS_CRITICAL
		;;  
		Primary/Unknown)
			echo "Critical : node peer is in Unknown state"
			exit $_NAGIOS_STATUS_CRITICAL
		;;
		Secondary/Unknown)
			echo "Critical : node peer is in Unknown state"
			exit $_NAGIOS_STATUS_CRITICAL
		;;
		Unknown/Unknown)
			echo "Critical : node is in Unknown state"
			exit $_NAGIOS_STATUS_CRITICAL
		;;
		*)
			
			RO_VALUE=1
			return $_NAGIOS_STATUS_WARNING
	esac
} 

function check_duplication_function() {
	case $1 in
		UpToDate/UpToDate)
			DS_VALUE=0
		;;
		*)
			echo "Critical : some node is not UpToDate"
			exit $_NAGIOS_STATUS_CRITICAL
		;;  
	esac
} 

function check_mount_function() {
	case $1 in
		${DRBDDIR})
			if [ $ROLE == "M" ] ; then
				MOUNT_DIR_VALUE=0
			fi
		;;
		*)
			if [ $ROLE == "S" ] ; then
				return $_NAGIOS_STATUS_OK
			else
				echo "Critical : drbd device not mounted !!!"
				exit $_NAGIOS_STATUS_CRITICAL
			fi
		;;  
	esac
} 

function parse_status_value_function() {
	if (((${CS_VALUE}+${RO_VALUE}+${DS_VALUE})==0)) ; then
			echo "Ok : connection status : $CS - role status : $RO - duplication status : $DS"
			exit $_NAGIOS_STATUS_OK
	else	
			echo "NOk : connection status : $CS - role status : $RO - duplication status : $DS"
			exit $_NAGIOS_STATUS_WARNING
	fi
} 

if [ $# -lt 1 ]; then
        help
        exit 1
fi

OPTIND=0
while getopts ":r:m:h" opt ; do
  case $opt in
      r ) 
		case $OPTARG in
			Primary)
				ROLE=M
			;;
			Secondary)
				ROLE=S
			;;
			*)
				echo "You must define role : Primary OR Secondary"
				exit $_NAGIOS_STATUS_WARNING
			;;
		esac
		;;
      m ) DRBDDIR=$OPTARG
		;;
      h ) help ;;
      ?) echo "unknown option -$OPTARG"
         exit 1;;
      esac
done
shift $(($OPTIND - 1))

: ${DRBDDIR:=$DEFAULT_DRBDDIR}

## moteur ##


check_connection_function $CS
check_role_function $RO
check_duplication_function $DS
check_mount_function $MOUNT_DIR

parse_status_value_function

# si pas de match
echo "UNKNOWN STATE"	
exit $_NAGIOS_STATUS_WARNING
