#!/usr/bin/env bash

PATH=/usr/sbin:/usr/bin:/sbin:/bin:/opt/sophos-av/bin/

# on desactive les alias
\unalias -a

_NAGIOS_STATUS_OK=0
_NAGIOS_STATUS_WARNING=1
_NAGIOS_STATUS_CRITICAL=2
_NAGIOS_STATUS_UNKNOWN=3

PIPE_PATH="/tmp/jesuisunpipe"

for MYPROG in savdstatus mkfifo awk ; do
	if ! type -ap $MYPROG 1> /dev/null ; then
		echo "UNKNOWN : impossible de trouver $MYPROG" ;
		exit $_NAGIOS_STATUS_UNKNOWN ;
	fi
done

# en fin de script on detruit le pipe
trap "rm -f $PIPE_PATH" EXIT QUIT TERM

# on cree le pipe s'il n'existe pas
if [[ ! -p $PIPE_PATH ]]; then
	if ! mkfifo $PIPE_PATH ; then
		echo "UNKNOWN : impossible de creer le pipe $PIPE_PATH" ;
		exit $_NAGIOS_STATUS_UNKNOWN
	fi     
fi

check_sophos_alive() {
if ! savdstatus -v ; then
	echo "CRITICAL : impossible d'obtenir le status de Sophos" ;
	exit $_NAGIOS_STATUS_CRITICAL
fi
}

# on envoi la sortie de la commande dans le pipe
check_sophos_alive > $PIPE_PATH &

while read line ; do 
	if ! echo "$line" | awk '{print$NF}' | grep -Eq "active|running" ; then 
		array_appli_nok+=("$line")
		OUT="CRITICAL : Sophos AV en erreur -" ;
		RCODE=2 ;
	
	else
		array_appli_ok+=("$line")
		RCODE=0 ;
	fi ;
done < $PIPE_PATH

#####################################
#   moteur de traitement d'erreur   #
#####################################

if [ -z $RCODE ] ; then
	echo "UNKNOWN : une erreur a eu lieu durant le traitement, merci d'intervenir" ;
	exit $_NAGIOS_STATUS_UNKNOWN ;
fi
	
if (($RCODE==2)) ; then
	echo "$OUT ${array_appli_nok[@]}" ;
	exit $_NAGIOS_STATUS_CRITICAL ;
elif (($RCODE==0)) ; then
	echo "$OUT ${array_appli_ok[@]}" ;
	exit $_NAGIOS_STATUS_OK ;
else
	# catch if no match     
	echo "UNKNOWN : une erreur a eu lieu durant le traitement, merci d'intervenir" ;
	exit $_NAGIOS_STATUS_UNKNOWN ;
fi
